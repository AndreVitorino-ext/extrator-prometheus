#!/bin/bash
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

local_dir() {
  if [[ "$OSTYPE" == "darwin"* ]]; then
    pwd
  elif [[ "$OSTYPE" == "msys"* ]]; then
    pwd -W
  elif [[ "$OSTYPE" == "cygwin"* ]]; then
    pwd -W
  else
    pwd
  fi
}


# Redirect output to stderr.
exec 1>&2

SCRIPT_DIR=$(local_dir)
HOOK_NAME=$(basename $0)
HOOK_DIR="$SCRIPT_DIR/.event.d"

if [[ -d $HOOK_DIR ]]; then
  stdin=$(cat /dev/stdin)

  for hook in $HOOK_DIR/*.sh; do
    echo "Running $hook hook"
    echo "$stdin" | $hook "$@"

    exit_code=$?

    if [ $exit_code != 0 ]; then
      exit $exit_code
    fi
  done
fi

exit 0